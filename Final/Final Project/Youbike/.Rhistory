shiny::runApp()
install.packages('shinythemes')
shiny::runApp()
install.packages('shinythemes')
shiny::runApp()
install.packages('tidyverse')
runApp()
install.packages('DT')
runApp()
library(vcd)
# Bike
sbi <- read.csv('D:/GitHub/NTU-CS-X/Final Project/Youbike/data/Youbike_sbi.csv')
sbi_g <- gather(sbi, time, quan, 6:ncol(sbi))
# Table
sbi_tab <- with(sbi_g, tapply(quan, list(sarea, time), FUN=sum))
library(tidyverse)
sbi_g <- gather(sbi, time, quan, 6:ncol(sbi))
# Table
sbi_tab <- with(sbi_g, tapply(quan, list(sarea, time), FUN=sum))
# Chi Test
# Expected
chisq.test(sbi_tab)$expected
# Residuals
chisq.test(sbi_tab)$residuals
# mosaic
mosaic(sbi_tab, shade = T, color = T)
library(vcd)
install.packages('vcd')
# mosaic
mosaic(sbi_tab, shade = T, color = T)
library(vcd)
# mosaic
mosaic(sbi_tab, shade = T, color = T)
# mosaic
mosaic(sbi_tab, shade = T, color = T) +
scale_fill_gradientn(name = 'Median', colours = brewer.pal(11, "RdYlGn"))
library(vcd)
library(tidyverse)
library(ggplot2)
library(RColorBrewer)
# mosaic
mosaic(sbi_tab, shade = T, color = T) +
scale_fill_gradientn(name = 'Median', colours = brewer.pal(11, "RdYlGn"))
# mosaic
mosaicplot(sbi_tab, shade = T, color = T) +
scale_fill_gradientn(name = 'Median', colours = brewer.pal(11, "RdYlGn"))
# mosaic
mosai(sbi_tab, shade = T, color = T)
# mosaic
mosaic(sbi_tab, shade = T, color = T)
# mosaic
mosaic(sbi_tab, shade = T, color = T, labeling = labeling_border(rot_labels = c(90, 90, 90, 90, 90, 90, 90, 90, 90, 90)))
# mosaic
mosaic(sbi_tab, shade = T, color = T, labeling = labeling_border(just_labels = c(90, 90, 90, 90, 90, 90, 90, 90, 90, 90)))
# mosaic
mosaic(sbi_tab, shade = T, color = T, labeling = labeling_border(label = c(90, 90, 90, 90, 90, 90, 90, 90, 90, 90)))
?mosaic
+ theme(axis.text.x=element_text(angle=-25, hjust= .1))
# mosaic
mosaic(sbi_tab, shade = T, color = T) +#labeling = labeling_border(label = rot_labelsc(90, 90, 90, 90, 90, 90, 90, 90, 90, 90)))
theme(axis.text.x=element_text(angle=-25, hjust= .1))
# mosaic
mosaic(sbi_tab, shade = T, color = T, labeling = labeling_border(rot_labels =  = c(90, 90, 90, 90, 90, 90, 90, 90, 90, 90)))
# mosaic
mosaic(sbi_tab, shade = T, color = T, labeling = labeling_border(rot_labels = c(90, 90, 90, 90, 90, 90, 90, 90, 90, 90)))
# mosaic
mosaic(sbi_tab, shade = T, color = T, labeling = labeling_border(rot_labels = c(0, 90, 0 0)))
# mosaic
mosaic(sbi_tab, shade = T, color = T, labeling = labeling_border(rot_labels = c(0, 90, 0, 0)))
# mosaic
mosaic(sbi_tab, shade = T, color = T, labeling = labeling_border(rot_labels = c(900, 90, 0, 0)))
# mosaic
mosaic(sbi_tab, shade = T, color = T, labeling = labeling_border(rot_labels = c(90, 90, 0, 0)))
# mosaic
ggplot(sbi_tab) +
mosaic(sbi_tab, shade = T, color = T, labeling = labeling_border(rot_labels = c(90, 90, 0, 0)))
# mosaic
mosaic(sbi_tab, shade = T, color = brewer.pal(11, "RdYlGn"), labeling = labeling_border(rot_labels = c(90, 90, 0, 0)))
# mosaic
mosaic(sbi_tab, shade = T, color = brewer.pal(11, "RdYlGn"), labeling = labeling_border(rot_labels = c(90, 90, 0, 0)))
# mosaic
mosaic(sbi_tab, shade = T, color = colorRampPalette("RdYlGn"), labeling = labeling_border(rot_labels = c(90, 90, 0, 0)))
# mosaic
mosaic(sbi_tab, shade = T, color = colorRampPalette("RdYlGn")(9), labeling = labeling_border(rot_labels = c(90, 90, 0, 0)))
# mosaic
mosaic(sbi_tab, shade = T, color = colorRampPalettec("green3", "yellow", "red"), space="rgb")(9), labeling = labeling_border(rot_labels = c(90, 90, 0, 0)))
# mosaic
mosaic(sbi_tab, shade = T, col=colorRampPalette( c("green3", "yellow", "red"), space="rgb")(9), labeling = labeling_border(rot_labels = c(90, 90, 0, 0)))
# mosaic
mosaicplot(sbi_tab, shade = T, col=colorRampPalette( c("green3", "yellow", "red"), space="rgb")(9), labeling = labeling_border(rot_labels = c(90, 90, 0, 0)))
# mosaic
mosaic(sbi_tab, shade = T, color = colorRampPalettec("green3", "yellow", "red"), space="rgb")(9), labeling = labeling_border(rot_labels = c(90, 90, 0, 0)))
# mosaic
mosaic(sbi_tab, shade = T, color = T, labeling = labeling_border(rot_labels = c(90, 90, 0, 0)))
# Chi Test
# Expected
chisq.test(sbi_tab)$expected
sbi_tab
# Residuals
chisq.test(sbi_tab)$residuals
sbi <- read.csv('D:/GitHub/NTU-CS-X/Final Project/Youbike/data/Youbike_sbi.csv')
sbi_g <- gather(sbi, time, quan, 6:ncol(sbi))
library(vcd)
library(tidyverse)
library(ggplot2)
library(RColorBrewer)
# Bike
sbi <- read.csv('D:/GitHub/NTU-CS-X/Final Project/Youbike/data/Youbike_sbi.csv')
sbi_g <- gather(sbi, time, quan, 6:ncol(sbi))
View(sbi_g)
shiny::runApp()
runApp()
library(vcd)
# Bike
sbi <- read.csv('D:/GitHub/NTU-CS-X/Final Project/Youbike/data/Youbike_sbi3.csv')
View(sbi)
sbi_g <- gather(sbi, time, quan, 6:23)
View(sbi_g)
runApp()
runApp()
library(vcd)
library(tidyverse)
library(ggplot2)
library(RColorBrewer)
# Bike
sbi <- read.csv('D:/GitHub/NTU-CS-X/Final Project/Youbike/data/Youbike_sbi3.csv')
sbi_g <- gather(sbi, time, quan, 6:23)
# Table
sbi_tab <- with(sbi_g, tapply(quan, list(sarea, time), FUN=sum))
# Chi Test
# Expected
chisq.test(sbi_tab)$expected
# Residuals
chisq.test(sbi_tab)$residuals
# mosaic
mosaic(sbi_tab, shade = T, color = T, labeling = labeling_border(rot_labels = c(90, 90, 0, 0)))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
round(chisq.test(sbi_tab)$residuals, 2)
runApp()
runApp()
runApp()
runApp()
runApp()
res3 <- read.csv('data/Youbike_res3.csv')
res3_g <- gather(res3, time, per, 6:23)
View(res3)
ggplot(data = res3, aes(x = sarea, y = mean(X7))) +
geom_bar()
ggplot(data = res3, aes(x = sarea, y = mean(X7))) +
geom_col()
ggplot(data = res3, aes(x = sarea, y = X7)) +
geom_col()
library(shiny)
library(shinythemes)
library(ggmap)
library(ggplot2)
library(RColorBrewer)
#library(tidyverse)
library(stringr)
library(tidyr)
library(dplyr)
library(readr)
library(lubridate)
library(DT)
library(tools)
library(vcd)
ggplot(data = res3, aes(x = sarea, y = X8)) +
geom_col()
ggplot(data = res3, aes(x = sarea, y = mean(X8)) +
geom_col()
ggplot(data = res3, aes(x = sarea, y = mean(X8)) +
geom_col()
ggplot(data = res3, aes(x = sarea, y = mean(X8)) +
geom_col()
god
ggplot(data = res3, aes(x = sarea, y = mean(X8)) +
geom_col()
0
mean(res3$X7)
group_by(res3, sarea)
ggplot(res3, aes(x = sarea, y = mean(X8)) +
0
ooo
res3
group_by(res3, sarea) %>%
summarize(mean(6:23))
group_by(res3, sarea) %>%
summarize(mean(X7))
res3_p <- group_by(res3, sarea)
View(res3_p)
ggplot(res3_p, aes(x = sarea, y = mean(X8)) +
geom_col()
lll
ggplot(res3_p, aes(x = sarea, y = mean(X8))
geom_bar()
ggplot(res3_p, aes(x = sarea, y = mean(X8))
geom_bar()
ggplot(res3_p, aes(x = sarea, y = mean(X8)) +
geom_bar()
res3 <- read.csv('data/Youbike_res3.csv')
res3_g <- gather(res3, time, per, 6:23)
library(shiny)
library(shinythemes)
library(ggmap)
library(ggplot2)
library(RColorBrewer)
#library(tidyverse)
library(stringr)
library(tidyr)
library(dplyr)
library(readr)
library(lubridate)
library(DT)
library(tools)
library(vcd)
res3 <- read.csv('data/Youbike_res3.csv')
res3_g <- gather(res3, time, per, 6:23)
res3_p <- group_by(res3, sarea)
ggplot(res3_p, aes(x = sarea, y = mean(X8)) +
geom_bar()
View(res3)
View(res3)
ggplot(res3, aes(x = sarea, y = X8) +
geom_bar()
ggplot(res3, aes(x = sarea)) +
geom_bar()
ggplot(res3, aes(x = sarea)) +
geom_bar()
ggplot(res3_p, aes(x = sarea, y = mean(X8))) +
geom_bar()
ggplot(res3_p, aes(x = sarea, y = mean(X8))) +
geom_col()
res3_p <- group_by(res3, sarea)
mean(res3_p$X7)
ggplot(group_by(res3, sarea), aes(x = sarea, y = mean(X8))) +
geom_col()
ggplot(group_by(res3, sarea), aes(x = sarea, y = mean(X8))) +
geom_col()
group_by(res3, sarea) %>%
summarize(mean = mean(X7))
p <- group_by(res3, sarea) %>%
summarize(mean = mean(X7))
View(p)
ggplot(p, aes(x = sarea, y = mean)) +
geom_col()
ggplot(res3, aes(x = sarea, y = X7)) +
geom_jitter()
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(alpha = 0.6, position = position_jitter(width = 0.2))
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(alpha = 0.6, position = position_jitter(width = 0.15))
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(alpha = 0.6, position = position_jitter(width = 0.1))
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.6, position = position_jitter(width = 0.1))
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.8, position = position_jitter(width = 0.1))
library(Hmisc)
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.8, position = position_jitter(width = 0.1)) +
stat_summary(fun.y = mean, geom = 'point', col = "#E41A1C") +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.2, col = "#E41A1C")
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.8, position = position_jitter(width = 0.1)) +
stat_summary(fun.data = med_IQR, geom = 'linerange', col = "#E41A1C") +
stat_summary(fun.data = gg_range, geom = 'linerange', width = 0.2, col = "#E41A1C", alpha = 0.4)
# Function to save range for use in ggplot
gg_range <- function(x) {
data.frame(ymin = min(x), # Min
ymax = max(x)) # Max
}
# Function to get quantiles
med_IQR <- function(x) {
data.frame(y = median(x), # Median
ymin = quantile(x)[2], # 1st quartile
ymax = quantile(x)[4])  # 3rd quartile
}
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.8, position = position_jitter(width = 0.1)) +
stat_summary(fun.data = med_IQR, geom = 'linerange', col = "#E41A1C") +
stat_summary(fun.data = gg_range, geom = 'linerange', width = 0.2, col = "#E41A1C", alpha = 0.4)
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.8, position = position_jitter(width = 0.1)) +
stat_summary(fun.data = med_IQR, geom = 'linerange', col = "#E41A1C") +
stat_summary(fun.data = gg_range, geom = 'linerange', width = 0.2, col = "#E41A1C", alpha = 0.4, size = 3)
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.8, position = position_jitter(width = 0.1)) +
stat_summary(fun.data = med_IQR, geom = 'linerange', col = "#E41A1C", size = 3) +
stat_summary(fun.data = gg_range, geom = 'linerange', width = 0.2, col = "#E41A1C", alpha = 0.4, size = 3)
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.8, position = position_jitter(width = 0.1)) +
stat_summary(fun.data = med_IQR, geom = 'linerange', col = "#E41A1C", size = 3, alpha = 0.8) +
stat_summary(fun.data = gg_range, geom = 'linerange', width = 0.2, col = "#E41A1C", alpha = 0.2, size = 3)
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.3, position = position_jitter(width = 0.1)) +
stat_summary(fun.data = med_IQR, geom = 'linerange', col = "#E41A1C", size = 3, alpha = 0.8) +
stat_summary(fun.data = gg_range, geom = 'linerange', width = 0.2, col = "#E41A1C", alpha = 0.2, size = 3)
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.5, position = position_jitter(width = 0.1)) +
stat_summary(fun.data = med_IQR, geom = 'linerange', col = "#E41A1C", size = 3, alpha = 0.8) +
stat_summary(fun.data = gg_range, geom = 'linerange', width = 0.2, col = "#E41A1C", alpha = 0.2, size = 3)
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.5, position = position_jitter(width = 0.1)) +
stat_summary(fun.data = med_IQR, geom = 'linerange', col = "#0088A8", size = 3, alpha = 0.8) +
stat_summary(fun.data = gg_range, geom = 'linerange', width = 0.2, col = "#0088A8", alpha = 0.2, size = 3)
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.5, position = position_jitter(width = 0.1)) +
stat_summary(fun.data = med_IQR, geom = 'linerange', col = "#0088A8", size = 3, alpha = 0.8) +
stat_summary(fun.data = gg_range, geom = 'linerange', width = 0.2, col = "#0088A8", alpha = 0.2, size = 3) +
stat_summary(geom = 'point', fun.y = median,
position = posn.d, size = 3,
col = 'black', shape = 'X') +
ggtitle('Five-number Summary Plot')
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.5, position = position_jitter(width = 0.1)) +
stat_summary(fun.data = med_IQR, geom = 'linerange', col = "#0088A8", size = 3, alpha = 0.8) +
stat_summary(fun.data = gg_range, geom = 'linerange', width = 0.2, col = "#0088A8", alpha = 0.2, size = 3) +
stat_summary(geom = 'point', fun.y = median,
size = 3,
col = 'black', shape = 'X') +
ggtitle('Five-number Summary Plot')
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.5, position = position_jitter(width = 0.1)) +
stat_summary(fun.data = med_IQR, geom = 'linerange', col = "#0088A8", size = 3, alpha = 0.8) +
stat_summary(fun.data = gg_range, geom = 'linerange', width = 0.2, col = "#0088A8", alpha = 0.2, size = 3) +
stat_summary(geom = 'point', fun.y = median,
size = 5,
col = 'white', shape = 16) +
ggtitle('Five-number Summary Plot')
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.5, position = position_jitter(width = 0.1)) +
stat_summary(fun.data = med_IQR, geom = 'linerange', col = "#0088A8", size = 3, alpha = 0.8) +
stat_summary(fun.data = gg_range, geom = 'linerange', width = 0.2, col = "#0088A8", alpha = 0.2, size = 3) +
stat_summary(geom = 'point', fun.y = median,
size = 5,
col = '	#003377', shape = 16) +
ggtitle('Five-number Summary Plot')
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.5, position = position_jitter(width = 0.1)) +
stat_summary(fun.data = med_IQR, geom = 'linerange', col = "#0088A8", size = 3, alpha = 0.8) +
stat_summary(fun.data = gg_range, geom = 'linerange', width = 0.2, col = "#0088A8", alpha = 0.2, size = 3) +
stat_summary(geom = 'point', fun.y = median,
size = 5,
col = '#003377', shape = 16) +
ggtitle('Five-number Summary Plot')
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.5, position = position_jitter(width = 0.1)) +
stat_summary(fun.data = med_IQR, geom = 'linerange', col = "#0088A8", size = 3, alpha = 0.8) +
stat_summary(fun.data = gg_range, geom = 'linerange', width = 0.2, col = "#0088A8", alpha = 0.2, size = 3) +
stat_summary(geom = 'point', fun.y = median,
size = 5,
col = '#CCEEFF', shape = 16) +
ggtitle('Five-number Summary Plot')
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.5, position = position_jitter(width = 0.1)) +
stat_summary(fun.data = med_IQR, geom = 'linerange', col = "#0088A8", size = 3, alpha = 0.8) +
stat_summary(fun.data = gg_range, geom = 'linerange', width = 0.2, col = "#0088A8", alpha = 0.2, size = 3) +
stat_summary(geom = 'point', fun.y = median,
size = 5,
col = '#CCEEFF', fill = 'black', shape = 19) +
ggtitle('Five-number Summary Plot')
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.5, position = position_jitter(width = 0.1)) +
stat_summary(fun.data = med_IQR, geom = 'linerange', col = "#0088A8", size = 3, alpha = 0.8) +
stat_summary(fun.data = gg_range, geom = 'linerange', width = 0.2, col = "#0088A8", alpha = 0.2, size = 3) +
stat_summary(geom = 'point', fun.y = median,
size = 5,
col = '#CCEEFF', fill = 'black', shape = 21) +
ggtitle('Five-number Summary Plot')
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.5, position = position_jitter(width = 0.1)) +
stat_summary(fun.data = med_IQR, geom = 'linerange', col = "#0088A8", size = 3, alpha = 0.8) +
stat_summary(fun.data = gg_range, geom = 'linerange', width = 0.2, col = "#0088A8", alpha = 0.2, size = 3) +
stat_summary(geom = 'point', fun.y = median,
size = 5,
fill = '#CCEEFF', col = 'black', shape = 21) +
ggtitle('Five-number Summary Plot')
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.5, position = position_jitter(width = 0.1)) +
stat_summary(fun.data = med_IQR, geom = 'linerange', col = "#0088A8", size = 3, alpha = 0.8) +
stat_summary(fun.data = gg_range, geom = 'linerange', width = 0.2, col = "#0088A8", alpha = 0.2, size = 3) +
stat_summary(geom = 'point', fun.y = median,
size = 3,
fill = '#CCEEFF', col = 'black', shape = 21) +
ggtitle('Five-number Summary Plot')
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.5, position = position_jitter(width = 0.1)) +
stat_summary(fun.data = med_IQR, geom = 'linerange', col = "#0088A8", size = 3, alpha = 0.8) +
stat_summary(fun.data = gg_range, geom = 'linerange', width = 0.2, col = "#0088A8", alpha = 0.2, size = 3) +
stat_summary(geom = 'point', fun.y = median,
size = 4,
fill = '#CCEEFF', col = 'black', shape = 21) +
ggtitle('Five-number Summary Plot')
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.5, position = position_jitter(width = 0.1)) +
stat_summary(fun.data = med_IQR, geom = 'linerange', col = "#0088A8", size = 3, alpha = 0.8) +
stat_summary(fun.data = gg_range, geom = 'linerange', width = 0.2, col = "#0088A8", alpha = 0.2, size = 3) +
stat_summary(geom = 'point', fun.y = median,
size = 4,
fill = '#CCEEFF', col = '#003377', shape = 21) +
ggtitle('Five-number Summary Plot')
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.5, position = position_jitter(width = 0.1)) +
stat_summary(fun.data = med_IQR, geom = 'linerange', col = "#0088A8", size = 3, alpha = 0.8) +
stat_summary(fun.data = gg_range, geom = 'linerange', width = 0.2, col = "#0088A8", alpha = 0.2, size = 3) +
stat_summary(geom = 'point', fun.y = median,
size = 3.5,
fill = '#CCEEFF', col = '#003377', shape = 21) +
ggtitle('Five-number Summary Plot')
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.5, position = position_jitter(width = 0.1)) +
stat_summary(fun.data = med_IQR, geom = 'linerange', col = "#0088A8", size = 3, alpha = 0.8) +
stat_summary(fun.data = gg_range, geom = 'linerange', width = 0.2, col = "#0088A8", alpha = 0.2, size = 3) +
stat_summary(geom = 'point', fun.y = median,
size = 3,
fill = '#CCEEFF', col = '#003377', shape = 21) +
ggtitle('Five-number Summary Plot')
ggplot(res3, aes(x = sarea, y = X7)) +
geom_point(shape = 1, alpha = 0.5, position = position_jitter(width = 0.1)) +
stat_summary(fun.data = med_IQR, geom = 'linerange', col = "#0088A8", size = 3, alpha = 0.8) +
stat_summary(fun.data = gg_range, geom = 'linerange', width = 0.2, col = "#0088A8", alpha = 0.2, size = 3) +
stat_summary(geom = 'point', fun.y = median,
size = 3,
fill = '#CCEEFF', col = 'red', shape = 21) +
ggtitle('Five-number Summary Plot')
runApp()
runApp()
runApp()
runApp()
runApp()
res <- read.csv('D:/GitHub/NTU-CS-X/Final Project/Youbike/data/Youbike_res.csv')
map <- get_map(location = c(min(res$lng), min(res$lat), max(res$lng), max(res$lat)), maptype = "toner-lite")
ggmap(map, darken = c(0.5, "white")) %+% res + aes(x = lng, y = lat) +
geom_jitter()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(ggmap)
library(ggplot2)
library(gganimate)
library(viridis)
library(RColorBrewer)
library(raster)
library(tidyr)
library(tweenr)
library(magick)
library(stringr)
library(lubridate)
res <- read.csv('D:/GitHub/NTU-CS-X/Final Project/Youbike/data/Youbike_res.csv')
sbi <- read.csv('D:/GitHub/NTU-CS-X/Final Project/Youbike/data/Youbike_sbi.csv')
map <- get_map(location = c(min(res$lng), min(res$lat), max(res$lng), max(res$lat)), maptype = "toner-lite")
res3 <- read.csv('D:/GitHub/NTU-CS-X/Final Project/Youbike/data/Youbike_res7.csv')
res3_g <- gather(res3, time, per, X7:X24)
res3_g$time <- str_replace(res3_g$time, 'X', '')
res.stat.map.ani <- ggmap(map, darken = c(0.5, "white")) %+% res3_g + aes(x = lng, y = lat, z = per) +
stat_summary_2d(fun = median, alpha = 0.6) +
scale_fill_gradientn(name = 'Median', colours = brewer.pal(11, "RdYlGn"), space = 'Lab') +
labs(title = 'Sunday, {closest_state}', x = "Longitude", y = "Latitude") +
coord_map() +
transition_states(time, transition_length = 1, state_length = 1)
print(res.stat.map.ani)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
library(ggmap)
library(ggplot2)
library(gganimate)
library(viridis)
library(RColorBrewer)
library(raster)
library(tidyr)
library(tweenr)
library(magick)
library(stringr)
library(lubridate)
res <- read.csv('D:/GitHub/NTU-CS-X/Final Project/Youbike/data/Youbike_res.csv')
map <- get_map(location = c(min(res$lng), min(res$lat), max(res$lng), max(res$lat)), maptype = "toner-lite")
res3 <- read.csv('D:/GitHub/NTU-CS-X/Final Project/Youbike/data/Youbike_res1.csv')
res3_g <- gather(res3, time, per, X7:X24)
res3_g$time <- str_replace(res3_g$time, 'X', '')
res.stat.map.ani <- ggmap(map, darken = c(0.5, "white")) %+% res3_g + aes(x = lng, y = lat, z = per) +
stat_summary_2d(fun = median, alpha = 0.6) +
scale_fill_gradientn(name = 'Median', colours = brewer.pal(11, "RdYlGn"), space = 'Lab') +
labs(title = 'Monday, {closest_state}', x = "Longitude", y = "Latitude") +
coord_map() +
transition_states(time, transition_length = 1, state_length = 1)
print(res.stat.map.ani)
res.stat.map.ani <- ggmap(map, darken = c(0.5, "white")) %+% res3_g + aes(x = lng, y = lat, z = per) +
stat_summary_2d(fun = median, alpha = 0.6) +
scale_fill_gradientn(name = 'Median', colours = brewer.pal(11, "RdYlGn"), space = 'Lab') +
labs(title = 'Monday, {closest_state}', x = "Longitude", y = "Latitude") +
coord_map() +
transition_states(time, transition_length = 1, state_length = 1)
print(res.stat.map.ani)
shiny::runApp()
map <- get_map(location = c(min(res$lng), min(res$lat), max(res$lng), max(res$lat)), maptype = "toner")
ggmap(map)
