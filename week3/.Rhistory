music.corpus <- tm_map(music.corpus, toSpace, "say")
music.corpus <- tm_map(music.corpus, toSpace, "the")
music.corpus <- tm_map(music.corpus, removePunctuation)
music.corpus<- tm_map(music.corpus, content_transformer(tolower))
music.tdm <- TermDocumentMatrix(music.corpus, control = list())
inspect(music.tdm)
docs.tf <- apply(as.matrix(music.tdm), 2, function(word) { word/sum(word) })
idf.function <- function(word_doc) { log2( (length(word_doc)+1) / nnzero(word_doc) ) }
docs.idf <- apply(as.matrix(music.tdm), 1, idf.function)
docs.tfidf <- docs.tf * docs.idf
head(docs.tfidf)
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq,colors=brewer.pal(8, "Dark2"))
library(tm)
library(tmcn)
library(factoextra)
library(Matrix)
library(NLP)
library(wordcloud)
music.corpus <- Corpus( DirSource("./musical") )
#DirSource是Directory Source顧名思義就是指定一個資料夾作為資料來源所以參數是要放一個資料夾的路徑
#開始清理資料
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
}
)
music.corpus <- tm_map(music.corpus, toSpace, "you")
music.corpus <- tm_map(music.corpus, toSpace, "and")
music.corpus <- tm_map(music.corpus, toSpace, "her")
music.corpus <- tm_map(music.corpus, toSpace, "all")
music.corpus <- tm_map(music.corpus, toSpace, "that")
music.corpus <- tm_map(music.corpus, toSpace, "let")
music.corpus <- tm_map(music.corpus, toSpace, "with")
music.corpus <- tm_map(music.corpus, toSpace, "for")
music.corpus <- tm_map(music.corpus, toSpace, "say")
music.corpus <- tm_map(music.corpus, toSpace, "the")
music.corpus <- tm_map(music.corpus, removePunctuation)
music.corpus<- tm_map(music.corpus, content_transformer(tolower))
music.tdm <- TermDocumentMatrix(music.corpus, control = list())
inspect(music.tdm)
docs.tf <- apply(as.matrix(music.tdm), 2, function(word) { word/sum(word) })
idf.function <- function(word_doc) { log2( (length(word_doc)+1) / nnzero(word_doc) ) }
docs.idf <- apply(as.matrix(music.tdm), 1, idf.function)
docs.tfidf <- docs.tf * docs.idf
head(docs.tfidf)
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale = c(3, 0.2),max.words = 100, colors=brewer.pal(8, "Dark2"))
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale = c(3, 0.2),max.words = 100, colors=brewer.pal(8, "Dark2"))
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("fat"))
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("fate"))
library(tm)
library(tmcn)
library(factoextra)
library(Matrix)
library(NLP)
library(wordcloud)
music.corpus <- Corpus( DirSource("./musical") )
#DirSource是Directory Source顧名思義就是指定一個資料夾作為資料來源所以參數是要放一個資料夾的路徑
#開始清理資料
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
}
)
music.corpus <- tm_map(music.corpus, toSpace, "you")
music.corpus <- tm_map(music.corpus, toSpace, "and")
music.corpus <- tm_map(music.corpus, toSpace, "her")
music.corpus <- tm_map(music.corpus, toSpace, "all")
music.corpus <- tm_map(music.corpus, toSpace, "that")
music.corpus <- tm_map(music.corpus, toSpace, "let")
music.corpus <- tm_map(music.corpus, toSpace, "with")
music.corpus <- tm_map(music.corpus, toSpace, "for")
music.corpus <- tm_map(music.corpus, toSpace, "say")
music.corpus <- tm_map(music.corpus, toSpace, "the")
music.corpus <- tm_map(music.corpus, toSpace, "fat")
music.corpus <- tm_map(music.corpus, removePunctuation)
music.corpus<- tm_map(music.corpus, content_transformer(tolower))
music.tdm <- TermDocumentMatrix(music.corpus, control = list())
inspect(music.tdm)
docs.tf <- apply(as.matrix(music.tdm), 2, function(word) { word/sum(word) })
idf.function <- function(word_doc) { log2( (length(word_doc)+1) / nnzero(word_doc) ) }
docs.idf <- apply(as.matrix(music.tdm), 1, idf.function)
docs.tfidf <- docs.tf * docs.idf
head(docs.tfidf)
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale = c(3, 0.2),max.words = 100, colors=brewer.pal(8, "Dark2"))
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale = c(2, 0.2),max.words = 100, colors=brewer.pal(8, "Dark2"))
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale = c(2.5, 0.2),max.words = 100, colors=brewer.pal(8, "Dark2"))
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale = c(2.8, 0.2),max.words = 100, colors=brewer.pal(8, "Dark2"))
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale = c(2.9, 0.2),max.words = 100, colors=brewer.pal(8, "Dark2"))
library(tm)
library(tmcn)
library(factoextra)
library(Matrix)
library(NLP)
library(wordcloud)
music.corpus <- Corpus( DirSource("./musical") )
#DirSource是Directory Source顧名思義就是指定一個資料夾作為資料來源所以參數是要放一個資料夾的路徑
#開始清理資料
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
}
)
music.corpus <- tm_map(music.corpus, toSpace, "you")
music.corpus <- tm_map(music.corpus, toSpace, "and")
music.corpus <- tm_map(music.corpus, toSpace, "her")
music.corpus <- tm_map(music.corpus, toSpace, "all")
music.corpus <- tm_map(music.corpus, toSpace, "that")
music.corpus <- tm_map(music.corpus, toSpace, "let")
music.corpus <- tm_map(music.corpus, toSpace, "with")
music.corpus <- tm_map(music.corpus, toSpace, "for")
music.corpus <- tm_map(music.corpus, toSpace, "say")
music.corpus <- tm_map(music.corpus, toSpace, "the")
music.corpus <- tm_map(music.corpus, toSpace, "fat")
music.corpus <- tm_map(music.corpus, toSpace, "this")
music.corpus <- tm_map(music.corpus, toSpace, "each")
music.corpus <- tm_map(music.corpus, toSpace, "what")
music.corpus <- tm_map(music.corpus, removePunctuation)
music.corpus<- tm_map(music.corpus, content_transformer(tolower))
music.tdm <- TermDocumentMatrix(music.corpus, control = list())
inspect(music.tdm)
docs.tf <- apply(as.matrix(music.tdm), 2, function(word) { word/sum(word) })
idf.function <- function(word_doc) { log2( (length(word_doc)+1) / nnzero(word_doc) ) }
docs.idf <- apply(as.matrix(music.tdm), 1, idf.function)
docs.tfidf <- docs.tf * docs.idf
head(docs.tfidf)
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale = c(2.9, 0.2),max.words = 100, colors=brewer.pal(8, "Dark2"))
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale = c(2.9, 0.2),max.words = 100, colors=brewer.pal(8, "Dark2"))
?nnzero
library(tm)
library(tmcn)
library(factoextra)
library(Matrix)
library(NLP)
library(wordcloud)
music.corpus <- Corpus( DirSource("./musical") )
#DirSource是Directory Source顧名思義就是指定一個資料夾作為資料來源所以參數是要放一個資料夾的路徑
#開始清理資料
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
}
)
music.corpus <- tm_map(music.corpus, toSpace, "you")
music.corpus <- tm_map(music.corpus, toSpace, "and")
music.corpus <- tm_map(music.corpus, toSpace, "her")
music.corpus <- tm_map(music.corpus, toSpace, "all")
music.corpus <- tm_map(music.corpus, toSpace, "that")
music.corpus <- tm_map(music.corpus, toSpace, "let")
music.corpus <- tm_map(music.corpus, toSpace, "with")
music.corpus <- tm_map(music.corpus, toSpace, "for")
music.corpus <- tm_map(music.corpus, toSpace, "say")
music.corpus <- tm_map(music.corpus, toSpace, "the")
music.corpus <- tm_map(music.corpus, toSpace, "fat")
music.corpus <- tm_map(music.corpus, toSpace, "this")
music.corpus <- tm_map(music.corpus, toSpace, "each")
music.corpus <- tm_map(music.corpus, toSpace, "what")
music.corpus <- tm_map(music.corpus, toSpace, "were")
#清理不需要的文字完畢
#將標點消除，轉小寫，再轉成tdm表格
music.corpus <- tm_map(music.corpus, removePunctuation)
music.corpus<- tm_map(music.corpus, content_transformer(tolower))
music.tdm <- TermDocumentMatrix(music.corpus, control = list())
inspect(music.tdm)
#檢查成果
#TDM 轉成 TF-IDF
#nnzero returns the number of non-zero values of a numeric-like R object, and in particular an object x inheriting from class
docs.tf <- apply(as.matrix(music.tdm), 2, function(word) { word/sum(word) })
idf.function <- function(word_doc) { log2( (length(word_doc)+1) / nnzero(word_doc) ) }
docs.idf <- apply(as.matrix(music.tdm), 1, idf.function)
docs.tfidf <- docs.tf * docs.idf
#察看結果
head(docs.tfidf)
#劃出文字雲
#先按照頻率高低排列
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale = c(2.9, 0.2),max.words = 100, colors=brewer.pal(8, "Dark2"))
TopWords = data.frame()
for( id in c(1:n) )
{
dayMax = order(docs.tfidf[,id+1], decreasing = TRUE)
showResult = t(as.data.frame(docs.tfidf[dayMax[1:5],1]))
TopWords = rbind(TopWords, showResult)
}
rownames(TopWords) = colnames(docs.tfidf)[2:(n+1)]
TopWords = droplevels(TopWords)
kable(TopWords)
?jieba_tokenizer
library(varhandle)
install.packages(varhandle)
install.packages("varhandle")
library(varhandle)
head(docs.df)
?rowSums
head(docs.df)
arrange(desc(docs.tfidf))
library(dplyr)
arrange(desc(docs.tfidf))
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale = c(2.9, 0.2),max.words = 100, colors=brewer.pal(8, "Dark2"))
docs.pca <- prcomp(docs.tfidf, scale = T)
class(docs.tfidf)
cdocs.tfidf<-as.data.frame(docs.tfidf)
cdocs.tfidf<-as.data.frame(docs.tfidf)
cdocs.tfidf%>%select(CHRISTINE.r.txt)%>%arrange(CHRISTINE.r.txt)
class(cdocs.tfidf)
head(cdocs.tfidf)
cdocs.tfidf<-as.data.frame(docs.tfidf)
cdocs.tfidf%>%select(CHRISTINE.r.txt)%>%head(arrange(desc(CHRISTINE.r.txt)))
cdocs.tfidf%>%select(CHRISTINE.r.txt)%>%head(arrange(desc(CHRISTINE.r.txt)))
cdocs.tfidf%>%select(CHRISTINE.r.txt)%>%arrange(desc(CHRISTINE.r.txt))
cdocs.tfidf%>%arrange(desc(CHRISTINE.r.txt))
cdocs.tfidf
music.corpus <- tm_map(music.corpus, toSpace, "that")
cdocs.tfidf<-as.data.frame(docs.tfidf)
cdocs.tfidf
arrange(cdocs.tfidf,desc(CHRISTINE.r.txt))
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("angel","christine","phantom"))
library(tm)
library(tmcn)
library(factoextra)
library(Matrix)
library(NLP)
library(wordcloud)
library(dplyr)
music.corpus <- Corpus( DirSource("./musical") )
#DirSource是Directory Source顧名思義就是指定一個資料夾作為資料來源所以參數是要放一個資料夾的路徑
#開始清理資料
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
}
)
music.corpus <- tm_map(music.corpus, toSpace, "you")
music.corpus <- tm_map(music.corpus, toSpace, "and")
music.corpus <- tm_map(music.corpus, toSpace, "her")
music.corpus <- tm_map(music.corpus, toSpace, "all")
music.corpus <- tm_map(music.corpus, toSpace, "that")
music.corpus <- tm_map(music.corpus, toSpace, "let")
music.corpus <- tm_map(music.corpus, toSpace, "with")
music.corpus <- tm_map(music.corpus, toSpace, "for")
music.corpus <- tm_map(music.corpus, toSpace, "say")
music.corpus <- tm_map(music.corpus, toSpace, "the")
music.corpus <- tm_map(music.corpus, removePunctuation)
music.corpus<- tm_map(music.corpus, content_transformer(tolower))
music.tdm <- TermDocumentMatrix(music.corpus, control = list())
inspect(music.tdm)
docs.tf <- apply(as.matrix(music.tdm), 2, function(word) { word/sum(word) })
idf.function <- function(word_doc) { log2( (length(word_doc)+1) / nnzero(word_doc) ) }
docs.idf <- apply(as.matrix(music.tdm), 1, idf.function)
docs.tfidf <- docs.tf * docs.idf
cdocs.tfidf<-as.data.frame(docs.tfidf)
arrange(cdocs.tfidf,desc(CHRISTINE.r.txt))
#查詢字頻
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("angel","christine","phantom"))
query.tfidf(c("angel","christine","phantom","music"))
#查詢字頻
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("angel","christine","phantom","music"))
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale = c(2.9, 0.2),max.words = 100, colors=brewer.pal(8, "Dark2"))
#計算個詞彙的詞頻總和
#先按照頻率高低排列
#把單詞-詞頻對應存入 data frame
#劃出文字雲
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
#如果出現了裝不下字元的警告，可以調整scale和max.words
wordcloud(docs.df$word, docs.df$freq, scale = c(4, 0.2),max.words = 100, colors=brewer.pal(8, "Dark2"))
#計算個詞彙的詞頻總和
#先按照頻率高低排列
#把單詞-詞頻對應存入 data frame
#劃出文字雲
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
#如果出現了裝不下字元的警告，可以調整scale和max.words
wordcloud(docs.df$word, docs.df$freq, scale = c(4, 0.2),max.words = 100, colors=brewer.pal(8, "Dark2"))
library(tm)
library(tmcn)
library(factoextra)
library(Matrix)
library(NLP)
library(wordcloud)
music.corpus <- Corpus( DirSource("./musical") )
#DirSource是Directory Source顧名思義就是指定一個資料夾作為資料來源所以參數是要放一個資料夾的路徑
#開始清理資料
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
}
)
music.corpus <- tm_map(music.corpus, toSpace, "you")
music.corpus <- tm_map(music.corpus, toSpace, "and")
music.corpus <- tm_map(music.corpus, toSpace, "her")
music.corpus <- tm_map(music.corpus, toSpace, "all")
music.corpus <- tm_map(music.corpus, toSpace, "that")
music.corpus <- tm_map(music.corpus, toSpace, "let")
music.corpus <- tm_map(music.corpus, toSpace, "with")
music.corpus <- tm_map(music.corpus, toSpace, "for")
music.corpus <- tm_map(music.corpus, toSpace, "say")
music.corpus <- tm_map(music.corpus, toSpace, "the")
music.corpus <- tm_map(music.corpus, toSpace, "fat")
music.corpus <- tm_map(music.corpus, toSpace, "this")
music.corpus <- tm_map(music.corpus, toSpace, "each")
music.corpus <- tm_map(music.corpus, toSpace, "what")
music.corpus <- tm_map(music.corpus, toSpace, "were")
#清理不需要的文字完畢
#將標點消除，轉小寫，再轉成tdm表格
music.corpus <- tm_map(music.corpus, removePunctuation)
music.corpus<- tm_map(music.corpus, content_transformer(tolower))
music.tdm <- TermDocumentMatrix(music.corpus, control = list())
inspect(music.tdm)
#檢查成果
#TDM 轉成 TF-IDF
#nnzero returns the number of non-zero values of a numeric-like R object, and in particular an object x inheriting from class
docs.tf <- apply(as.matrix(music.tdm), 2, function(word) { word/sum(word) })
idf.function <- function(word_doc) { log2( (length(word_doc)+1) / nnzero(word_doc) ) }
docs.idf <- apply(as.matrix(music.tdm), 1, idf.function)
docs.tfidf <- docs.tf * docs.idf
#察看結果
head(docs.tfidf)
#查詢字頻
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("angel","christine","phantom","music"))
#計算個詞彙的詞頻總和
#先按照頻率高低排列
#把單詞-詞頻對應存入 data frame
#劃出文字雲
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
#如果出現了裝不下字元的警告，可以調整scale和max.words
wordcloud(docs.df$word, docs.df$freq, scale = c(4, 0.2),max.words = 100, colors=brewer.pal(8, "Dark2"))
#計算個詞彙的詞頻總和
#先按照頻率高低排列
#把單詞-詞頻對應存入 data frame
#劃出文字雲
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
#如果出現了裝不下字元的警告，可以調整scale和max.words
wordcloud(docs.df$word, docs.df$freq, scale = c(5, 0.2),max.words = 100, colors=brewer.pal(8, "Dark2"))
#計算個詞彙的詞頻總和
#先按照頻率高低排列
#把單詞-詞頻對應存入 data frame
#劃出文字雲
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
#如果出現了裝不下字元的警告，可以調整scale和max.words
wordcloud(docs.df$word, docs.df$freq, scale = c(5, 0.2),max.words = 120, colors=brewer.pal(8, "Dark2"))
#計算個詞彙的詞頻總和
#先按照頻率高低排列
#把單詞-詞頻對應存入 data frame
#劃出文字雲
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
#如果出現了裝不下字元的警告，可以調整scale和max.words
wordcloud(docs.df$word, docs.df$freq, scale = c(5, 0.2),max.words = 100, colors=brewer.pal(8, "Dark2"))
#計算個詞彙的詞頻總和
#先按照頻率高低排列
#把單詞-詞頻對應存入 data frame
#劃出文字雲
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
#如果出現了裝不下字元的警告，可以調整scale和max.words
wordcloud(docs.df$word, docs.df$freq, scale = c(4.5, 0.2),max.words = 100, colors=brewer.pal(8, "Dark2"))
setwd("D:/github/NTU_R/week3")
library(tm)
library(tmcn)
library(factoextra)
library(Matrix)
library(NLP)
library(wordcloud)
music.corpus <- Corpus( DirSource("./musical") )
#DirSource是Directory Source顧名思義就是指定一個資料夾作為資料來源所以參數是要放一個資料夾的路徑
#開始清理資料
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
}
)
music.corpus <- tm_map(music.corpus, toSpace, "you")
music.corpus <- tm_map(music.corpus, toSpace, "and")
music.corpus <- tm_map(music.corpus, toSpace, "her")
music.corpus <- tm_map(music.corpus, toSpace, "all")
music.corpus <- tm_map(music.corpus, toSpace, "that")
music.corpus <- tm_map(music.corpus, toSpace, "let")
music.corpus <- tm_map(music.corpus, toSpace, "with")
music.corpus <- tm_map(music.corpus, toSpace, "for")
music.corpus <- tm_map(music.corpus, toSpace, "say")
music.corpus <- tm_map(music.corpus, toSpace, "the")
music.corpus <- tm_map(music.corpus, toSpace, "fat")
music.corpus <- tm_map(music.corpus, toSpace, "this")
music.corpus <- tm_map(music.corpus, toSpace, "each")
music.corpus <- tm_map(music.corpus, toSpace, "what")
music.corpus <- tm_map(music.corpus, toSpace, "were")
#清理不需要的文字完畢
#將標點消除，轉小寫，再轉成tdm表格
music.corpus <- tm_map(music.corpus, removePunctuation)
music.corpus<- tm_map(music.corpus, content_transformer(tolower))
music.tdm <- TermDocumentMatrix(music.corpus, control = list())
inspect(music.tdm)
#檢查成果
#TDM 轉成 TF-IDF
#nnzero returns the number of non-zero values of a numeric-like R object, and in particular an object x inheriting from class
docs.tf <- apply(as.matrix(music.tdm), 2, function(word) { word/sum(word) })
idf.function <- function(word_doc) { log2( (length(word_doc)+1) / nnzero(word_doc) ) }
docs.idf <- apply(as.matrix(music.tdm), 1, idf.function)
docs.tfidf <- docs.tf * docs.idf
#察看結果
head(docs.tfidf)
